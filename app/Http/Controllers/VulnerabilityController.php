<?php

namespace App\Http\Controllers;

use App\Models\Vulnerability;
use App\Http\Requests\Vulnerabilities\StoreVulnerabilityRequest;
use App\Http\Requests\Vulnerabilities\UpdateVulnerabilityRequest;
use Illuminate\Contracts\View\View;

class VulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return View
     */
    public function index(): View
    {
        return view('vulnerabilities.vulnerabilities-index', [
            'vulnerabilities' => Vulnerability::orderBy('rank')->paginate()
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return View
     */
    public function create(): View
    {
        return view('vulnerabilities.vulnerabilities-create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\StoreVulnerabilityRequest  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreVulnerabilityRequest $request)
    {
        Vulnerability::create($request->validated())
            ? session()->flash('success', 'Vulnerability has been created successfully.')
            : session()->flash('failed', 'Vulnerability creation failed, please try later.');

        return redirect('vulnerabilities');
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function edit(Vulnerability $vulnerability)
    {
        return view('vulnerabilities.vulnerabilities-edit', compact('vulnerability'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\UpdateVulnerabilityRequest  $request
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateVulnerabilityRequest $request, Vulnerability $vulnerability)
    {
        $vulnerability->update($request->validated())
            ? session()->flash('success', 'Vulnerability has been updated successfully.')
            : session()->flash('failed', 'Vulnerability updating failed, please try later.');

        return redirect('vulnerabilities');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Vulnerability  $vulnerability
     * @return \Illuminate\Http\Response
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete()
            ? session()->flash('success', 'Vulnerability has been deleted successfully.')
            : session()->flash('failed', 'Vulnerability deleting failed, please try later.');

        return redirect('vulnerabilities');
    }
}
